require "prefabutil"

local prefabs = 
{
    "spoiled_food",
}

local function fn(Sim)
    local inst = CreateEntity()
    inst.entity:AddTransform()
    inst.entity:AddAnimState()
    
    inst.entity:AddNetwork()
    
    MakeInventoryPhysics(inst)
    
    inst:AddTag("preparedfoods")
    
    inst.AnimState:SetBank("Mate Amargo")
    inst.AnimState:SetBuild("Mate Amargo")
    inst.AnimState:PlayAnimation("idle")

    if not TheWorld.ismastersim then
        return inst
    end

    inst.entity:SetPristine()

    inst:AddComponent("edible")
    inst.components.edible.foodtype = "GENERIC"
    inst.components.edible.foodstate = "PREPARED"

    inst.components.edible.healthvalue = TUNING.HEALING_MEDSMALL+2
    inst.components.edible.hungervalue = TUNING.CALORIES_MEDSMALL+10
    inst.components.edible.sanityvalue = TUNING.SANITY_TINY+2

    inst:AddComponent("stackable")
    inst.components.stackable.maxsize = TUNING.STACK_SIZE_SMALLITEM
    
    inst:AddComponent("finiteuses")
    inst.components.finiteuses:SetMaxUses(TUNING.MATEAMARGO_USES)
    inst.components.finiteuses:SetUses(TUNING.MATEAMARGO_USES)
	  inst.components.finiteuses:SetOnFinished(inst.Remove)
	  inst.components.finiteuses:SetConsumption(ACTIONS.USE, 0.4) 


    inst:AddComponent("inventoryitem")
    inst.components.inventoryitem.atlasname = "images/inventoryimages/pamonha.xml"

    inst:AddComponent("inspectable")

    inst:AddComponent("tradable")
    inst.components.tradable.goldvalue = TUNING.GOLD_VALUES.MEAT

    return inst
end
STRINGS.NAMES.MATEAMARGO = "Mate Amargo"
STRINGS.CHARACTERS.GENERIC.DESCRIBE.MATEAMARGO = "El Primer Mate Siempre Es Amargo."
return Prefab( "common/inventory/pamonha", fn, assets, prefabs )
